name: Build
on:
  workflow_dispatch:
  push:
  pull_request:

env:
  DOCKER_BUILDKIT: 1
  COSIGN_EXPERIMENTAL: 1


permissions:
  contents: write
  id-token: write
  packages: write

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate Matrix
        id: generate-matrix
        run: |
          MATRIX=$(php matrix.php)
          echo "matrix<<EOF" >> $GITHUB_OUTPUT
          echo "$MATRIX" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

  build-fpm-amd64:
    name: PHP FPM ${{ matrix.php }} on amd64
    runs-on: ubuntu-latest
    needs: [generate-matrix]
    strategy: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login into Github Docker Registery
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: docker/build-push-action@v5
        with:
          tags: ${{ matrix.fpm-image }}-amd64
          context: fpm
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          build-args: |
            PHP_PATCH_VERSION=${{ matrix.phpPatch }}
            PHP_DIGEST=${{ matrix.phpPatchDigest }}
          push: true
          provenance: false

  build-fpm-arm64:
    name: PHP FPM ${{ matrix.php }} on arm64
    runs-on: hcloud-arm64-small
    needs: [generate-matrix]
    strategy: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login into Github Docker Registery
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: docker/build-push-action@v5
        with:
          tags: ${{ matrix.fpm-image }}-arm64
          context: fpm
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/arm64
          build-args: |
            PHP_PATCH_VERSION=${{ matrix.phpPatch }}
            PHP_DIGEST=${{ matrix.phpPatchDigest }}
          push: true
          provenance: false

  fpm-merge:
    name: Generate Docker Manifest for PHP ${{ matrix.php }}
    runs-on: ubuntu-latest
    needs: [generate-matrix, build-fpm-amd64, build-fpm-arm64]
    strategy: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Login into Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Login into Github Docker Registery
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Install Regclient
        run: |
          wget https://github.com/regclient/regclient/releases/latest/download/regctl-linux-amd64
          chmod +x regctl-linux-amd64

      - run: docker manifest create ${{ matrix.fpm-image }} --amend ${{ matrix.fpm-image }}-amd64 --amend ${{ matrix.fpm-image }}-arm64

      - run: docker tag ${{ matrix.fpm-image }} ${{ matrix.fpm-patch-image }}

      - run: docker manifest push ${{ matrix.fpm-image }}

      - run: cosign sign --yes ${{ matrix.fpm-image }}

      - if: github.ref == 'refs/heads/main'
        run: ./regctl-linux-amd64 image copy ${{ matrix.fpm-image }} ${{ matrix.fpm-hub-image }}

      - if: github.ref == 'refs/heads/main'
        run: ./regctl-linux-amd64 image copy ${{ matrix.fpm-patch-image }} ${{ matrix.fpm-patch-hub-image }}
  
  caddy:
    name: Build Caddy ${{ matrix.php }}
    runs-on: ubuntu-latest
    needs: [generate-matrix, fpm-merge]
    strategy: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login into Github Docker Registery
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: docker/build-push-action@v5
        if: github.ref == 'refs/heads/main'
        with:
          tags: |
            ghcr.io/shopware/docker-base:${{ matrix.php }}-caddy
            ghcr.io/shopware/docker-base:${{ matrix.php }}
            ghcr.io/shopware/docker-base:${{ matrix.phpPatch }}-caddy
            ghcr.io/shopware/docker-base:${{ matrix.phpPatch }}
            shopware/docker-base:${{ matrix.php }}-caddy
            shopware/docker-base:${{ matrix.php }}
            shopware/docker-base:${{ matrix.phpPatch }}-caddy
            shopware/docker-base:${{ matrix.phpPatch }}
          context: caddy
          cache-from: type=registry,ref=ghcr.io/shopware/docker-cache:${{ matrix.php }}-caddy
          cache-to: type=registry,ref=ghcr.io/shopware/docker-cache:${{ matrix.php }}-caddy,mode=max
          platforms: linux/amd64,linux/arm64
          build-args: |
            PHP_PATCH_VERSION=${{ matrix.phpPatch }}
            PHP_DIGEST=${{ matrix.phpPatchDigest }}
            SUPERVISORD_DIGEST=${{ matrix.supervisordDigest }}
          push: false
          provenance: false

